import 'package:donor_dashboard/core/widgets/challenge_card.dart';
import 'package:donor_dashboard/core/widgets/stat_card.dart';
import 'package:donor_dashboard/data/models/quest_model.dart'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—å –∫–≤–µ—Å—Ç—ñ–≤
import 'package:donor_dashboard/data/mock_data.dart';
import 'package:donor_dashboard/core/theme/app_colors.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:donor_dashboard/features/auth/services/local_auth_service.dart';

// –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞ StatefulWidget –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
class DashboardScreen extends StatefulWidget {
  final VoidCallback onUpdate;
  const DashboardScreen({super.key, required this.onUpdate});

  @override
  State<DashboardScreen> createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen> {
  final LocalAuthService _authService = LocalAuthService();
  late Future<List<QuestModel>> _questsFuture;

  @override
  void initState() {
    super.initState();
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–≤–µ—Å—Ç–∏ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É –µ–∫—Ä–∞–Ω—É
    _questsFuture = Future.value(MockData.quests);
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏ "–ø–æ—Ç—è–≥—É–≤–∞–Ω–Ω—ñ"
  Future<void> _refreshData() async {
    setState(() {
      _questsFuture = Future.value(MockData.quests);
    });
    // –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–∏—Ç—å –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –≤–æ–Ω–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—å)
    widget.onUpdate();
  }

  @override
  void didUpdateWidget(DashboardScreen oldWidget) {
    super.didUpdateWidget(oldWidget);
    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ–ª–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è onUpdate callback
    if (oldWidget.onUpdate != widget.onUpdate) {
      setState(() {
        _questsFuture = Future.value(MockData.quests);
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return Scaffold(
      // ValueListenableBuilder —Å–ª—É—Ö–∞—î –∑–º—ñ–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–∞–ø—Ä., –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–ª—ñ–≤)
      body: ListenableBuilder(
        listenable: _authService,
        builder: (context, child) {
          final currentUser = _authService.currentUser;
          if (currentUser == null) {
            return const Center(child: CircularProgressIndicator());
          }
          
          debugPrint("üìä –î–∞—à–±–æ—Ä–¥: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö - –±–∞–ª—ñ–≤: ${currentUser.totalPoints}, –∫–≤–µ—Å—Ç—ñ–≤: ${currentUser.completedQuests.length}");
          debugPrint("üìä –î–∞—à–±–æ—Ä–¥: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${currentUser.id}");
          debugPrint("üìä –î–∞—à–±–æ—Ä–¥: –ß–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${DateTime.now()}");

          // FutureBuilder –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–≤–µ—Å—Ç–∏
          return FutureBuilder<List<QuestModel>>(
            future: _questsFuture,
            builder: (context, snapshot) {
              // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∫–≤–µ—Å—Ç–∏, –∫–æ–ª–∏ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
              final activeQuests = (snapshot.data ?? [])
                  .where((quest) =>
                      !currentUser.completedQuests.containsKey(quest.id))
                  .toList();

              return RefreshIndicator(
                onRefresh: _refreshData,
                child: ListView(
                  padding: const EdgeInsets.symmetric(vertical: 16.0),
                  children: [
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16.0),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text('–í—ñ—Ç–∞—é,', style: theme.textTheme.bodyMedium),
                              Text(currentUser.name,
                                  style: theme.textTheme.headlineMedium),
                            ],
                          ),
                          const CircleAvatar(
                            radius: 25,
                            backgroundColor: AppColors.greenAccent,
                            child: Icon(Icons.person,
                                size: 30, color: Colors.white),
                          ),
                        ],
                      ),
                    ),
                    const SizedBox(height: 24),
                    // –£—Å—ñ –∫–∞—Ä—Ç–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–ø–µ—Ä –ø–æ–∫–∞–∑—É—é—Ç—å —Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16.0),
                      child: GridView.count(
                        crossAxisCount: 2,
                        shrinkWrap: true,
                        physics: const NeverScrollableScrollPhysics(),
                        crossAxisSpacing: 16,
                        mainAxisSpacing: 16,
                        childAspectRatio: 1.5,
                        children: [
                          StatCard(
                            title: '–î–æ–Ω–∞—Ü—ñ–π',
                            value: currentUser.totalDonations.toString(),
                            icon: CupertinoIcons.drop_fill,
                            iconColor: Colors.red.shade400,
                          ),
                          StatCard(
                            title: '–í—Ä—è—Ç–æ–≤–∞–Ω–æ',
                            value: "${currentUser.livesSaved} –∂–∏—Ç—Ç—ñ–≤",
                            icon: CupertinoIcons.heart_fill,
                            iconColor: AppColors.pinkAccent,
                          ),
                        ],
                      ),
                    ),
                    const SizedBox(height: 16),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16.0),
                      child: StatCard(
                        title: '–ó–∞–≥–∞–ª–æ–º –±–∞–ª—ñ–≤',
                        value: currentUser.totalPoints.toString(),
                        icon: CupertinoIcons.star_fill,
                        iconColor: Colors.amber,
                      ),
                    ),
                    const SizedBox(height: 32),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16.0),
                      child: Text('–ê–∫—Ç–∏–≤–Ω—ñ –∫–≤–µ—Å—Ç–∏',
                          style: theme.textTheme.headlineMedium),
                    ),
                    const SizedBox(height: 16),
                    // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á, –ø–æ–∫–∏ –∫–≤–µ—Å—Ç–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—å
                    if (snapshot.connectionState == ConnectionState.waiting)
                      const Center(child: CircularProgressIndicator())
                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–≤–µ—Å—Ç—ñ–≤ –Ω–µ–º–∞—î
                    else if (activeQuests.isEmpty)
                      const Center(
                        child: Padding(
                          padding: EdgeInsets.all(16.0),
                          child: Text("–£—Å—ñ –∫–≤–µ—Å—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ! ü•≥",
                              style: TextStyle(
                                  color: AppColors.lightTextSecondary)),
                        ),
                      )
                    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–µ—Ä—à—ñ 3 –∞–∫—Ç–∏–≤–Ω—ñ –∫–≤–µ—Å—Ç–∏
                    else
                      ...activeQuests.take(3).map((quest) => Padding(
                            padding: const EdgeInsets.fromLTRB(16, 0, 16, 16),
                            child: ChallengeCard(
                              quest: quest,
                              isCompleted: false,
                              onComplete: null,
                            ),
                          )),
                  ],
                ),
              );
            },
          );
        },
      ),
    );
  }
}
