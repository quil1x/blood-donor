// lib/features/auth/services/local_auth_service.dart
import 'package:donor_dashboard/data/models/app_user_model.dart';
import 'package:donor_dashboard/core/services/storage_service.dart';
import 'package:flutter/foundation.dart';

class LocalAuthService extends ChangeNotifier {
  // --- –°—Ç–≤–æ—Ä—é—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É (—Å–∏–Ω–≥–ª—Ç–æ–Ω) ---
  static final LocalAuthService _instance = LocalAuthService._internal();

  // –§–∞–±—Ä–∏—á–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —è–∫–∏–π –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î —Ç–æ–π —Å–∞–º–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
  factory LocalAuthService() {
    return _instance;
  }

  // –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
  LocalAuthService._internal();

  AppUser? _currentUser;
  final StorageService _storageService = StorageService();
  
  // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  AppUser? get currentUser => _currentUser;

  // –¶–µ–π –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
  Future<void> init() async {
    debugPrint("üîç –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π AuthService...");
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    _currentUser = await _storageService.loadUser();
    
    if (_currentUser != null) {
      debugPrint("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${_currentUser!.name}");
    } else {
      debugPrint("‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π");
    }
    
    notifyListeners();
  }

  // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  Future<String?> register({
    required String name,
    required String email,
    required String password,
  }) async {
    try {
      debugPrint("üîç –ü–æ—á–∏–Ω–∞—î–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: $email");
      
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—è
      if (password.length < 6) {
        return '–ü–∞—Ä–æ–ª—å –∑–∞–Ω–∞–¥—Ç–æ —Å–ª–∞–±–∫–∏–π.';
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
      if (!email.contains('@') || !email.contains('.')) {
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.';
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º email
      if (_currentUser != null && _currentUser!.email == email) {
        return '–ê–∫–∞—É–Ω—Ç –∑ —Ç–∞–∫–∏–º email –≤–∂–µ —ñ—Å–Ω—É—î.';
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      final newUser = AppUser(
        id: DateTime.now().millisecondsSinceEpoch.toString(), // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
        name: name,
        email: email,
        password: password, // <-- –û–°–¨ –¢–£–¢ –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø
      );

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ø–∞–º'—è—Ç—ñ —Ç–∞ –≤ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è—Ö
      _currentUser = newUser;
      await _storageService.saveUser(newUser);
      
      debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π: ${newUser.id}");
      notifyListeners();
      
      return null; // –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
    } catch (e) {
      debugPrint("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: $e");
      return '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.';
    }
  }

  // –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  Future<String?> login({
    required String email,
    required String password,
  }) async {
    try {
      debugPrint("üîç –ü–æ—á–∏–Ω–∞—î–º–æ –ª–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: $email");
      
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
      if (!email.contains('@') || !email.contains('.')) {
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.';
      }

      // –®—É–∫–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ email
      if (_currentUser == null || _currentUser!.email != email) {
        debugPrint("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π: $email");
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å.';
      }

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      await _storageService.saveUser(_currentUser!);
      notifyListeners();
      
      debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π: ${_currentUser!.name}");
      return null; // –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω
    } catch (e) {
      debugPrint("‚ùå –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—ñ–Ω—É: $e");
      return '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É.';
    }
  }

  // –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏
  Future<void> logout() async {
    debugPrint("üîç –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏...");
    _currentUser = null;
    await _storageService.clearUser();
    notifyListeners();
    debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤ –∑ —Å–∏—Å—Ç–µ–º–∏");
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  Future<bool> updateUserProfile(AppUser user) async {
    try {
      debugPrint("üîÑ –ü–æ—á–∏–Ω–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é...");
      debugPrint("üìä –°—Ç–∞—Ä—ñ –¥–∞–Ω—ñ: –±–∞–ª—ñ–≤: ${_currentUser?.totalPoints ?? 0}, –∫–≤–µ—Å—Ç—ñ–≤: ${_currentUser?.completedQuests.length ?? 0}");
      debugPrint("üìä –ù–æ–≤—ñ –¥–∞–Ω—ñ: –±–∞–ª—ñ–≤: ${user.totalPoints}, –∫–≤–µ—Å—Ç—ñ–≤: ${user.completedQuests.length}");
      
      _currentUser = user;
      await _storageService.updateUser(user);
      
      debugPrint("üîÑ –°–ø–æ–≤—ñ—â–∞—î–º–æ —Å–ª—É—Ö–∞—á—ñ–≤ –ø—Ä–æ –∑–º—ñ–Ω–∏...");
      notifyListeners();
      
      debugPrint("‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ: ${user.name}, –±–∞–ª—ñ–≤: ${user.totalPoints}, –∫–≤–µ—Å—Ç—ñ–≤: ${user.completedQuests.length}");
      debugPrint("üîÑ ChangeNotifier –æ–Ω–æ–≤–ª–µ–Ω–æ, —Å–ª—É—Ö–∞—á—ñ –±—É–¥—É—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω—ñ");
      
      // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
      debugPrint("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: _currentUser == user: ${_currentUser == user}");
      debugPrint("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: _currentUser.totalPoints: ${_currentUser?.totalPoints}");
      
      return true;
    } catch (e) {
      debugPrint("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é: $e");
      return false;
    }
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  AppUser? getCurrentUser() {
    return _currentUser;
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
  bool get isLoggedIn => _currentUser != null;
}