import 'package:donor_dashboard/data/models/app_user_model.dart';
import 'package:donor_dashboard/core/services/storage_service.dart';
import 'package:flutter/foundation.dart';

class AuthService {
  // --- –°—Ç–≤–æ—Ä—é—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É (—Å–∏–Ω–≥–ª—Ç–æ–Ω) ---
  static final AuthService _instance = AuthService._internal();

  // –§–∞–±—Ä–∏—á–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, —è–∫–∏–π –∑–∞–≤–∂–¥–∏ –ø–æ–≤–µ—Ä—Ç–∞—î —Ç–æ–π —Å–∞–º–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
  factory AuthService() {
    return _instance;
  }

  // –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
  AuthService._internal();
  // ---------------------------------------------------------

  final ValueNotifier<AppUser?> currentUserNotifier = ValueNotifier(null);
  AppUser? _currentUser;
  final StorageService _storageService = StorageService();

  // –¶–µ–π –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
  Future<void> init() async {
    debugPrint("üîç –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ AuthService...");
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    _currentUser = await _storageService.loadUser();
    
    if (_currentUser != null) {
      debugPrint("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${_currentUser!.name}");
      currentUserNotifier.value = _currentUser;
    } else {
      debugPrint("‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π");
      currentUserNotifier.value = null;
    }
  }

  // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  Future<String?> register(
      {required String name,
      required String email,
      required String password}) async {
    try {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—è
      if (password.length < 6) {
        return '–ü–∞—Ä–æ–ª—å –∑–∞–Ω–∞–¥—Ç–æ —Å–ª–∞–±–∫–∏–π.';
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
      if (!email.contains('@') || !email.contains('.')) {
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.';
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º email
      if (_currentUser != null && _currentUser!.email == email) {
        return '–ê–∫–∞—É–Ω—Ç –∑ —Ç–∞–∫–∏–º email –≤–∂–µ —ñ—Å–Ω—É—î.';
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      final newUser = AppUser(
        id: DateTime.now().millisecondsSinceEpoch.toString(),
        name: name,
        email: email,
      );

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ø–∞–º'—è—Ç—ñ —Ç–∞ –≤ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è—Ö
      _currentUser = newUser;
      currentUserNotifier.value = newUser;
      await _storageService.saveUser(newUser);
      
      debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π: ${newUser.id}");
      return null;
    } catch (e) {
      debugPrint("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: $e");
      return '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.';
    }
  }

  // –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  Future<String?> login(
      {required String email, required String password}) async {
    try {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è email
      if (!email.contains('@') || !email.contains('.')) {
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.';
      }

      // –®—É–∫–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ email
      if (_currentUser == null || _currentUser!.email != email) {
        debugPrint("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π: $email");
        return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å.';
      }

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      currentUserNotifier.value = _currentUser;
      await _storageService.saveUser(_currentUser!);
      
      debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π: ${_currentUser!.name}");
      return null; // –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω
    } catch (e) {
      debugPrint("‚ùå –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—ñ–Ω—É: $e");
      return '–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É.';
    }
  }

  // –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏
  Future<void> logout() async {
    debugPrint("üîç –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏...");
    _currentUser = null;
    currentUserNotifier.value = null;
    await _storageService.clearUser();
    debugPrint("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤ –∑ —Å–∏—Å—Ç–µ–º–∏");
  }
}
